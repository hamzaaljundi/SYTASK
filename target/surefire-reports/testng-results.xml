<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="9" passed="8" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-06-22T13:10:56 EEST" name="Two-Phase Test Suite" finished-at="2025-06-22T13:13:54 EEST" duration-ms="178628">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.CareSearchRunner@7cc0cdad]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.FinanceRunner@38425407]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2025-06-22T13:10:56 EEST" name="Phase 1 - Care Search" finished-at="2025-06-22T13:11:19 EEST" duration-ms="23343">
      <class name="runners.CareSearchRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:runners.CareSearchRunner@7cc0cdad]" started-at="2025-06-22T13:10:56 EEST" name="setUpClass" finished-at="2025-06-22T13:10:57 EEST" duration-ms="1004" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@17a7f733]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.CareSearchRunner@7cc0cdad]" started-at="2025-06-22T13:10:57 EEST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-22T13:11:18 EEST" duration-ms="21706" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search cars by brand and year range"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Car Search Functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runners.CareSearchRunner@7cc0cdad]" started-at="2025-06-22T13:11:19 EEST" name="tearDownClass" finished-at="2025-06-22T13:11:19 EEST" duration-ms="341" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runners.CareSearchRunner -->
    </test> <!-- Phase 1 - Care Search -->
    <test started-at="2025-06-22T13:11:19 EEST" name="Phase 2 - Finance Scenarios" finished-at="2025-06-22T13:13:54 EEST" duration-ms="155262">
      <class name="runners.FinanceRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:runners.FinanceRunner@38425407]" started-at="2025-06-22T13:11:19 EEST" name="setUpClass" finished-at="2025-06-22T13:11:19 EEST" duration-ms="31" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@68567e20]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.FinanceRunner@38425407]" started-at="2025-06-22T13:11:19 EEST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-22T13:11:57 EEST" duration-ms="37844" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["New Car - Government Sector Eligibility"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Finance Eligibility Application"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.FinanceRunner@38425407]" started-at="2025-06-22T13:11:19 EEST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-22T13:11:56 EEST" duration-ms="36902" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["New Car - Government Sector Eligibility"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Finance Eligibility Application"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for presence of element located by: By.xpath: //label[contains(.,'New car')]//input[@type='radio'] (tried for 10 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for presence of element located by: By.xpath: //label[contains(.,'New car')]//input[@type='radio'] (tried for 10 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at pages.finance.FinanceEligibilityPage.robustClick(FinanceEligibilityPage.java:53)
at pages.finance.FinanceEligibilityPage.selectCarType(FinanceEligibilityPage.java:117)
at steps.FinanceEligibilitySteps.selectCarTypeAndEmploymentSector(FinanceEligibilitySteps.java:35)
at âœ½.I select car type as "new" and employment sector as "government"(file:///C:/Users/Halju/SYTask/src/test/resources/features/FinanceEligibility.feature:11)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//label[contains(.,'New car')]//input[@type='radio']"}
  (Session info: chrome=137.0.7151.120)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.22.0', revision: 'c5f3146703*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [def8465acd788cf7ea420782baca88e6, findElement {using=xpath, value=//label[contains(.,'New car')]//input[@type='radio']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 137.0.7151.120, chrome: {chromedriverVersion: 137.0.7151.119 (e0ac9d12dff..., userDataDir: C:\Users\Halju\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:51165}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:51165/devtoo..., se:cdpVersion: 137.0.7151.120, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: def8465acd788cf7ea420782baca88e6
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:349)
at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:171)
at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:168)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:203)
at pages.finance.FinanceEligibilityPage.robustClick(FinanceEligibilityPage.java:53)
at pages.finance.FinanceEligibilityPage.selectCarType(FinanceEligibilityPage.java:117)
at steps.FinanceEligibilitySteps.selectCarTypeAndEmploymentSector(FinanceEligibilitySteps.java:35)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at io.cucumber.java.Invoker.doInvoke(Invoker.java:66)
at io.cucumber.java.Invoker.invoke(Invoker.java:24)
at io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)
at io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)
at io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)
at io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)
at io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)
at io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)
at io.cucumber.core.runner.TestStep.run(TestStep.java:56)
at io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)
at io.cucumber.core.runner.TestCase.run(TestCase.java:84)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.FinanceRunner@38425407]" started-at="2025-06-22T13:11:56 EEST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-22T13:12:43 EEST" duration-ms="46771" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["New Car - Private Sector Eligibility"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Finance Eligibility Application"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.FinanceRunner@38425407]" started-at="2025-06-22T13:11:57 EEST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-22T13:12:45 EEST" duration-ms="47483" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["New Car - Private Sector Eligibility"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Finance Eligibility Application"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.FinanceRunner@38425407]" started-at="2025-06-22T13:12:43 EEST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-22T13:13:16 EEST" duration-ms="32427" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Used Car - Government Sector Eligibility"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Finance Eligibility Application"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.FinanceRunner@38425407]" started-at="2025-06-22T13:12:45 EEST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-22T13:13:19 EEST" duration-ms="33749" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Used Car - Government Sector Eligibility"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Finance Eligibility Application"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.FinanceRunner@38425407]" started-at="2025-06-22T13:13:16 EEST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-22T13:13:52 EEST" duration-ms="35907" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Used Car - Private Sector Eligibility"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Finance Eligibility Application"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.FinanceRunner@38425407]" started-at="2025-06-22T13:13:19 EEST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-22T13:13:54 EEST" duration-ms="35165" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Used Car - Private Sector Eligibility"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Finance Eligibility Application"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runners.FinanceRunner@38425407]" started-at="2025-06-22T13:13:54 EEST" name="tearDownClass" finished-at="2025-06-22T13:13:54 EEST" duration-ms="89" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runners.FinanceRunner -->
    </test> <!-- Phase 2 - Finance Scenarios -->
  </suite> <!-- Two-Phase Test Suite -->
</testng-results>
